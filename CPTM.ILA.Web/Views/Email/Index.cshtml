@model CPTM.ILA.Web.ViewModels.EmailViewModel

@using CPTM.Comum;
@using CPTM.Comum.Web;
@using CPTM.CasisLibrary.MVC;

@{
    ViewBag.Title = "E-mail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h3>
            E-mail
        </h3>
    </div>
</div>

@{
    if (ViewBag.Retorno == Enumerador.EnumRetornoMensagem.Erro)
    {
        <script type="text/javascript">
	    $(document).ready(function () {
	        mostrarNotificacaoErro("Envio de E-mail", "@Html.Raw(ViewBag.Mensagem)");
	        carregarControles();
	    });
        </script>
    }
    else if (ViewBag.Retorno == Enumerador.EnumRetornoMensagem.Sucesso)
    {
        <script type="text/javascript">
        $(document).ready(function () {
            mostrarNotificacaoSucesso("Envio de E-mail", "@Html.Raw(ViewBag.Mensagem)");
	        carregarControles();
        });
        </script>

    }
}

@using (Ajax.BeginForm("Enviar", "Email", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "pagina", OnComplete = "", OnBegin = "exibirCarregando('pagina')" }, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Dados para envio
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.Remetente)*
                            @Html.CPTMTextBoxFor(x => x.Remetente, tipo: EnumTextBoxType.Email, preenchimentoObrigatorio: true, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { TabIndex = 1, MaxLength = "500" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.Destinatario)*
                            @Html.CPTMTextBoxFor(x => x.Destinatario, tipo: EnumTextBoxType.Padrao, tipoTexto: EnumTextTransform.Normal, preenchimentoObrigatorio: true, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { TabIndex = 1, MaxLength = "500", placeholder = "Endereços de e-mail separados por ponto e vírgula (;)" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.Cc)
                            @Html.CPTMTextBoxFor(x => x.Cc, tipo: EnumTextBoxType.Padrao, tipoTexto: EnumTextTransform.Normal, preenchimentoObrigatorio: false, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { TabIndex = 1, MaxLength = "500", placeholder = "Endereços de e-mail separados por ponto e vírgula (;)" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.Cco)
                            @Html.CPTMTextBoxFor(x => x.Cco, tipo: EnumTextBoxType.Padrao, tipoTexto: EnumTextTransform.Normal, preenchimentoObrigatorio: false, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { TabIndex = 1, MaxLength = "500", placeholder = "Endereços de e-mail separados por ponto e vírgula (;)" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.Assunto)*
                            @Html.CPTMTextBoxFor(x => x.Assunto, tipo: EnumTextBoxType.Padrao, tipoTexto: EnumTextTransform.Normal, preenchimentoObrigatorio: true, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { TabIndex = 1, MaxLength = "500" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(x => x.Mensagem)*
                            @Html.HiddenFor(x => x.Mensagem)
                            @Html.TextAreaFor(x => x.Mensagem, new { id = "MensagemHtml" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12 form-group">
                            @Html.CPTMLabelFor(x => x.Anexos)
                            @Html.TextBoxFor(x => x.Anexos, "", new { @type = "file", @multiple = "multiple" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <hr />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @Html.CPTMActionLink("Enviar", "btnEmailEnviar", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, estilo: BootStrapEstilo.Sucesso, iconeEsquerdo: Icones.Check_Circulo_1, htmlAttributes: new { TabIndex = 100 })
        </div>
    </div>
}

<script type="text/javascript">

    $(document).ready(function () {

        // Formatação de controles
        $("#MensagemHtml").Editor();

        $("#MensagemHtml").Editor("setText", $.parseHTML($("#Mensagem").val()))

        $("#btnEmailEnviar").click(function (e) {
            $("#Mensagem").val($("#MensagemHtml").Editor("getText"));
            e.preventDefault();
            $(this).parents('form').first().submit();
        });
    });

</script>

