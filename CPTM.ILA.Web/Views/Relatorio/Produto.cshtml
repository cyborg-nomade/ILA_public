@model CPTM.ILA.Web.Models.Produto.Filtro

@using CPTM.Comum.Web;
@using CPTM.CasisLibrary.MVC;

@{
    ViewBag.Title = "Relatório de Produtos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h3>Relatório de Produtos</h3>
    </div>
</div>
@using (Html.BeginForm("Produto", "Relatorio", FormMethod.Post, new { id = "frmRelatorioProdutoFiltro" }))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <i class="fa fa-filter"></i> Filtro
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-2 form-group">
                            @Html.CPTMLabelFor(x => x.ProdutoId)
                            @Html.CPTMTextBoxFor(x => x.ProdutoId, tipo: EnumTextBoxType.Numerico, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroProdutoId", TabIndex = 1, MaxLength = "10" })
                        </div>
                        <div class="col-md-4 form-group">
                            @Html.CPTMLabelFor(x => x.Nome)
                            @Html.CPTMTextBoxFor(x => x.Nome, tipo: EnumTextBoxType.AlfaNumericoSemEspaco, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroNome", TabIndex = 2, MaxLength = "30" })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.CPTMLabelFor(x => x.CategoriaIds)
                            @Html.CPTMDropdownListFor(x => x.CategoriaIds, ViewBag.ddlCategoria as List<SelectListItem>, multiplaSelecao: true, htmlAttributes: new { id = "FiltroCategoria", TabIndex = 3 })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.CPTMLabelFor(x => x.UnidadeMedidaIds)
                            @Html.CPTMDropdownListFor(x => x.UnidadeMedidaIds, ViewBag.ddlUnidadeMedida as List<SelectListItem>, multiplaSelecao: true, htmlAttributes: new { id = "FiltroUnidadeMedida", TabIndex = 4 })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group">
                            @Html.CPTMLabelFor(x => x.ValorInicial)
                            @Html.CPTMTextBoxFor(x => x.ValorInicial, tipo: EnumTextBoxType.Moeda, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroValorInicial", TabIndex = 5 })
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.CPTMLabelFor(x => x.ValorFinal)
                            @Html.CPTMTextBoxFor(x => x.ValorFinal, tipo: EnumTextBoxType.Moeda, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroValorFinal", TabIndex = 6 })
                        </div>
                        <div class="col-md-4 form-group">
                            @Html.CPTMLabelFor(x => x.CadastradoPorUserName)
                            <div class="input-group">
                                @Html.CPTMTextBoxFor(x => x.CadastradoPorUserName, tipo: EnumTextBoxType.AlfaNumericoSemCaracterEspecial, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroCadastradoPorUserName1", TabIndex = 10, MaxLength = "30" })
                                <span class="input-group-btn">
                                    <a class="btn-md btn btn-default botaoCustomizado semSubmit" data-toggle="tooltip" href="#" id="btnFiltroCadastradoPorUserNameBuscar" title="" data-original-title="Buscar"><i class="fa fa-search"></i> </a>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-2 form-group">
                            @Html.CPTMLabelFor(x => x.Ativo)
                            @Html.CPTMDropdownListFor(x => x.Ativo, ViewBag.ddlStatus as List<SelectListItem>, htmlAttributes: new { id = "FiltroAtivo" })
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
                    <div class="row">
                        <div class="col-md-10 form-group">
                            <div class="dropdown">
                                <button class="btn btn-default dropdown-toggle" type="button" id="btnProdutoRelatorio1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                    Relatório 1
                                    &nbsp;<span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="btnProdutoRelatorio1">
                                    <li>@Html.CPTMActionLink("PDF", "btnProdutoRelatorio1PDF", acaoSubmit: false, tipo: ActionLinkTipo.Normal, htmlAttributes: new { title = "Gerar em PDF", @class = "" })</li>
                                    <li>@Html.CPTMActionLink("Excel", "btnProdutoRelatorio1XLS", acaoSubmit: false, tipo: ActionLinkTipo.Normal, htmlAttributes: new { title = "Gerar em Excel", @class = "" })</li>
                                    <li>@Html.CPTMActionLink("RDLC Report", "btnProdutoRelatorio1RDLC", acaoSubmit: false, tipo: ActionLinkTipo.Normal, htmlAttributes: new { title = "Gerar Relatório", @class = "" })</li>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-2 form-group text-right">
                            @Html.CPTMActionLink("<u>L</u>impar", "btnProdutoLimpar", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, estilo: BootStrapEstilo.Padrao, iconeEsquerdo: Icones.FecharNegrito, htmlAttributes: new { @accesskey = "L" })
                        </div>
                    </div>                   
                </div>
            </div>
        </div>
    </div>
}

@Html.AntiForgeryToken()

<script type="text/javascript">

    $(document).ready(function () {

        // Filtro precarregados
        $('#FiltroProdutoId').val('@(Model.ProdutoId == 0 ? String.Empty : Model.ProdutoId.ToString())');
        @{
            if(Model.CategoriaIds != null)
            {
                foreach (var d in Model.CategoriaIds) { <text>$('#FiltroCategoria').find('option[value=@(d)]').attr('selected', true);</text> }
            }

            if(Model.UnidadeMedidaIds != null)
            {
                foreach (var d in Model.UnidadeMedidaIds) { <text>$('#FiltroUnidadeMedida').find('option[value=@(d)]').attr('selected', true);</text> }
            }

        }
        $('#FiltroValorInicial').val('@(Model.ValorInicial == 0 ? String.Empty : Model.ValorInicial.ToString())');
        $('#FiltroValorFinal').val('@(Model.ValorFinal == 0 ? String.Empty : Model.ValorFinal.ToString())');
        $('#FiltroAtivo').val('@(Model.Ativo)');
        $('#FiltroAtivo').selectpicker('refresh');

        /* Botões */
        $('#btnProdutoNovo').click(function () {
            mostrarCaixaDialogoAjax('modalProdutoCadastro', '@Url.Action("Inserir", "Produto")');
            return false;
        });
        // Pesquisar
        $('#btnProdutoPesquisar').click(function () {
            produtoPesquisar(true);
        });
        // Limpar
        $('#btnProdutoLimpar').click(function () {
            controlesFormularioLimpar('frmRelatorioProdutoFiltro');
            $('#FiltroId').focus();
        });

        // Relatórios
        $('#btnProdutoRelatorio1PDF').click(function () {
            window.open('@Url.Action("Produto1", "Relatorio")' + '?' + controlesFormularioObterQueryString('frmRelatorioProdutoFiltro') + '&tipoDeSaida=PDF');
            return false;
        });

        $('#btnProdutoRelatorio1XLS').click(function () {
            window.open('@Url.Action("Produto1", "Relatorio")' + '?' + controlesFormularioObterQueryString('frmRelatorioProdutoFiltro') + '&tipoDeSaida=EXCEL');
        });

        $('#btnProdutoRelatorio1RDLC').click(function () {
            window.open('@Url.Action("Produto1", "Relatorio")' + '?' + controlesFormularioObterQueryString('frmRelatorioProdutoFiltro') + '&tipoDeSaida=RDLC');
            return false;
        });


        // Usuário - Buscar
        $('#btnFiltroCadastradoPorUserNameBuscar').click(function () {
            modalUsuarioPesquisar('', 'FiltroCadastradoPorUserName');
        });

        // Carregar filtros armazenados
        controlesFormularioCarregarDadosSessionStorage('frmRelatorioProdutoFiltro');
    });

</script>
