@model CPTM.ILA.Web.Models.Produto.Filtro

@using CPTM.Comum.Web;
@using CPTM.CasisLibrary.MVC;

@{
    ViewBag.Title = "Produto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h3>Produto</h3>
    </div>
</div>
@using (Html.BeginForm("Index", "Produto", FormMethod.Post, new { id = "frmProdutoFiltro" }))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-target="#divProdutoFiltroPesquisa" style="cursor: pointer;">
                    <a href="#"><i class="fa fa-filter"></i> Filtro</a>
                </div>
                <div id="divProdutoFiltroPesquisa" class="panel-collapse collapse">
                    @Html.HiddenFor(x => x.OrdenarPorIndiceColuna)
                    @Html.HiddenFor(x => x.OrdenarPorDirecao)
                    @Html.HiddenFor(x => x.RegistroInicial)
                    @Html.HiddenFor(x => x.TamanhoPagina)
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-2 form-group">
                                @Html.CPTMLabelFor(x => x.ProdutoId)
                                @Html.CPTMTextBoxFor(x => x.ProdutoId, tipo: EnumTextBoxType.Numerico, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroProdutoId", TabIndex = 1, MaxLength = "10" })
                            </div>
                            <div class="col-md-4 form-group">
                                @Html.CPTMLabelFor(x => x.Nome)
                                @Html.CPTMTextBoxFor(x => x.Nome, tipo: EnumTextBoxType.AlfaNumericoSemEspaco, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroNome", TabIndex = 2, MaxLength = "30" })
                            </div>
                            <div class="col-md-3 form-group">
                                @Html.CPTMLabelFor(x => x.CategoriaIds)
                                @Html.CPTMDropdownListFor(x => x.CategoriaIds, ViewBag.ddlCategoria as List<SelectListItem>, multiplaSelecao: true, htmlAttributes: new { id = "FiltroCategoria", TabIndex = 3 })
                            </div>
                            <div class="col-md-3 form-group">
                                @Html.CPTMLabelFor(x => x.UnidadeMedidaIds)
                                @Html.CPTMDropdownListFor(x => x.UnidadeMedidaIds, ViewBag.ddlUnidadeMedida as List<SelectListItem>, multiplaSelecao: true, htmlAttributes: new { id = "FiltroUnidadeMedida", TabIndex = 4 })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3 form-group">
                                @Html.CPTMLabelFor(x => x.ValorInicial)
                                @Html.CPTMTextBoxFor(x => x.ValorInicial, tipo: EnumTextBoxType.Moeda, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroValorInicial", TabIndex = 5 })
                            </div>
                            <div class="col-md-3 form-group">
                                @Html.CPTMLabelFor(x => x.ValorFinal)
                                @Html.CPTMTextBoxFor(x => x.ValorFinal, tipo: EnumTextBoxType.Moeda, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroValorFinal", TabIndex = 6 })
                            </div>
                            <div class="col-md-4 form-group">
                                @Html.CPTMLabelFor(x => x.CadastradoPorUserName)
                                <div class="input-group">
                                    @Html.CPTMTextBoxFor(x => x.CadastradoPorUserName, tipo: EnumTextBoxType.AlfaNumericoSemCaracterEspecial, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { id = "FiltroCadastradoPorUserName1", TabIndex = 10, MaxLength = "30" })
                                    <span class="input-group-btn">
                                        <a class="btn-md btn btn-default botaoCustomizado semSubmit" data-toggle="tooltip" href="#" id="btnFiltroCadastradoPorUserNameBuscar" title="" data-original-title="Buscar"><i class="fa fa-search"></i> </a>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-2 form-group">
                                @Html.CPTMLabelFor(x => x.Ativo)
                                @Html.CPTMDropdownListFor(x => x.Ativo, ViewBag.ddlStatus as List<SelectListItem>, htmlAttributes: new { id = "FiltroAtivo" })
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        @Html.CPTMActionLink("<u>P</u>esquisar", "btnProdutoPesquisar", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, iconeEsquerdo: Icones.Pesquisar, htmlAttributes: new { @accesskey = "P" })
                        @Html.CPTMActionLink("<u>L</u>impar", "btnProdutoLimpar", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, estilo: BootStrapEstilo.Padrao, iconeEsquerdo: Icones.FecharNegrito, htmlAttributes: new { @accesskey = "L" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-6 col-sm-6 col-md-8 col-lg-10">
                        @Html.CPTMActionLink("<u>N</u>ovo", "btnProdutoNovo", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, iconeEsquerdo: Icones.Novo, servicoSegurancaAtivo: true, htmlAttributes: new { @accesskey = "N" })
                    </div>
                    <div class="col-xs-6 col-sm-6 col-md-4 col-lg-2 text-right">
                        @Html.CPTMActionLink("Exportar PDF", "btnProdutoExportarPDF", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, estilo: BootStrapEstilo.Padrao, iconeEsquerdo: Icones.TipoArquivo_PDF, servicoSegurancaAtivo: true, exibeTexto: false, htmlAttributes: new { title = "Exportar para PDF", @class = "" })
                        @Html.CPTMActionLink("Exportar Excel", "btnProdutoExportarXLS", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, estilo: BootStrapEstilo.Padrao, iconeEsquerdo: Icones.TipoArquivo_Excel, servicoSegurancaAtivo: true, exibeTexto: false, htmlAttributes: new { title = "Exportar para Excel", @class = "" })
                        @Html.CPTMActionLink("Exportar Word", "btnProdutoExportarDOC", acaoSubmit: false, tipo: ActionLinkTipo.Customizado, estilo: BootStrapEstilo.Padrao, iconeEsquerdo: Icones.TipoArquivo_Word, servicoSegurancaAtivo: true, exibeTexto: false, htmlAttributes: new { title = "Exportar para Word", @class = "" })
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <table id="gdvProduto" class="table table-striped table-bordered table-hover dt-responsive nowrap col1-direita col5-direita col6-centro" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th style="width: 5%;">
                            <label>Id</label>
                        </th>
                        <th style="width: auto;">
                            <label>Nome</label>
                        </th>
                        <th style="width: auto;">
                            <label>Categoria</label>
                        </th>
                        <th style="width: 10%;">
                            <label>Medida</label>
                        </th>
                        <th style="width: 10%;">
                            <label>Valor</label>
                        </th>
                        <th style="width: 5%;">
                            <label>Status</label>
                        </th>
                        <th class="nosort" style="width: 6%;">
                            <label>Ações</label>
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                </tfoot>
            </table>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

@*modalProdutoCadastro*@
<div id="modalProdutoCadastro" title="Cadastro de Produto" class="modal fade" role="dialog"></div>
@*modalProdutoCadastro*@

<script type="text/javascript">

    $(document).ready(function () {

        // Filtro precarregados
        $('#FiltroProdutoId').val('@(Model.ProdutoId == 0 ? String.Empty : Model.ProdutoId.ToString())');
        @{
            if(Model.CategoriaIds != null)
            {
                foreach (var d in Model.CategoriaIds) { <text>$('#FiltroCategoria').find('option[value=@(d)]').attr('selected', true);</text> }
            }

            if(Model.UnidadeMedidaIds != null)
            {
                foreach (var d in Model.UnidadeMedidaIds) { <text>$('#FiltroUnidadeMedida').find('option[value=@(d)]').attr('selected', true);</text> }
            }

        }
        $('#FiltroValorInicial').val('@(Model.ValorInicial == 0 ? String.Empty : Model.ValorInicial.ToString())');
        $('#FiltroValorFinal').val('@(Model.ValorFinal == 0 ? String.Empty : Model.ValorFinal.ToString())');
        $('#FiltroAtivo').val('@(Model.Ativo)');
        $('#FiltroAtivo').selectpicker('refresh');

        /* Botões */
        $('#btnProdutoNovo').click(function () {
            mostrarCaixaDialogoAjax('modalProdutoCadastro', '@Url.Action("Inserir", "Produto")');
            return false;
        });
        // Pesquisar
        $('#btnProdutoPesquisar').click(function () {
            produtoPesquisar(true);
        });
        // Limpar
        $('#btnProdutoLimpar').click(function () {
            controlesFormularioLimpar('frmProdutoFiltro');
            $('#FiltroId').focus();
        });

        // Exportação
        $('#btnProdutoExportarXLS').click(function () {
            window.location.href = '@Url.Action("Exportar", "Produto")' + '?' + controlesFormularioObterQueryString('frmProdutoFiltro') + '&tipoDeSaida=EXCEL';
            return false;
        });
        $('#btnProdutoExportarPDF').click(function () {
            window.location.href = '@Url.Action("Exportar", "Produto")' + '?' + controlesFormularioObterQueryString('frmProdutoFiltro') + '&tipoDeSaida=PDF';
            return false;
        });
        $('#btnProdutoExportarDOC').click(function () {
            window.location.href = '@Url.Action("Exportar", "Produto")' + '?' + controlesFormularioObterQueryString('frmProdutoFiltro') + '&tipoDeSaida=WORD';
            return false;
        });

        // Usuário - Buscar
        $('#btnFiltroCadastradoPorUserNameBuscar').click(function () {
            modalUsuarioPesquisar('', 'FiltroCadastradoPorUserName');
        });

        // Carregar filtros armazenados
        controlesFormularioCarregarDadosSessionStorage('frmProdutoFiltro');

        // Carrega grid
        produtoPesquisar();
    });

    // Pesquisar
    function produtoPesquisar(resetPaginacao) {
        // Action
        var ajaxLink = '@Url.Action("Pesquisar", "Produto")';
        // Resetar paginação
        if (resetPaginacao == true)
            controlesFormularioResetPagina('frmProdutoFiltro');
        // Obtém e armazena filtro de pesquisa
        var model = controlesFormularioObter('frmProdutoFiltro');
        // Gera grid
        criarDataTable('gdvProduto', ajaxLink, model, null, null);
    }
    // Detalhar
    function produtoDetalhar(id) {
        mostrarCaixaDialogoAjax('modalProdutoCadastro', '@Url.Action("Detalhar", "Produto")' + '?id=' + id);
        return false;
    }
    // Alterar
    function produtoAlterar(id) {
        mostrarCaixaDialogoAjax('modalProdutoCadastro', '@Url.Action("Alterar", "Produto")' + '?id=' + id);
        return false;
    }
    // Excluir
    function produtoExcluir(id, nome) {

        var idAlert = randomString();
        var mensagem = 'Tem certeza que deseja excluir o registro <b>' + nome + '</b>?';

        var modal = '<div id="' + idAlert + '" class="modal fade" role="dialog">'
				+ '	<div class="modal-dialog">'
				+ '		<div class="modal-content">'
				+ '			<div class="modal-header">'
				+ '				<button type="button" class="close" data-dismiss="modal">&times;</button>'
				+ '				<h4 class="modal-title"><i class="fa fa-question-circle  "></i> Confirmação de exclusão</h4>'
				+ '			</div>'
				+ '			<div class="modal-body">'
				+ '				<div class="row">'
				+ '					<div class="col-xs-12 col-md-12 col-md-12 col-lg-12">' + mensagem + '</div>'
				+ '				</div>'
				+ '			</div>'
				+ '			<div class="modal-footer">'
				+ '             <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times-circle"></i> Não</button>'
                + '             <button id="btnSim' + idAlert + '" type="button" class="btn btn-success"><i class="fa fa-check-circle"></i> Sim</button>'
				+ '			</div>'
				+ '		</div>'
				+ '	</div>'
				+ '</div>';

        $(modal).prependTo('body');

        $('#' + idAlert).modal();

        $('#btnSim' + idAlert).click(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Excluir", "Produto")',
                data: { id: decodeURIComponent(id), __RequestVerificationToken: $('input[name^=__RequestVerificationToken]').first().val() },
                beforeSend: function () {
                    $('#' + idAlert).modal('hide');
                },
                success: function (data) {
                    if (data.sucesso == true) {
                        mostrarNotificacaoSucesso('Exclusão de Produto', 'Produto <b>' + nome + '</b> excluído com sucesso');
                        produtoPesquisar();
                    }
                    else {
                        mostrarNotificacaoErro('Exclusão de Produto', data.msg);
                    }
                },
                error: function (xhr, st, str) {
                    mostrarNotificacaoErro('Exclusão de Produto', str);
                },
                complete: function () {

                }
            });
        });

	}

</script>
