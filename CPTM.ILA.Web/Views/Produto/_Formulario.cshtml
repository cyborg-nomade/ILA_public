@model CPTM.ILA.Web.Models.Produto

@using CPTM.CasisLibrary.MVC;
@using CPTM.Comum;

@{
	if (ViewBag.Retorno == Enumerador.EnumRetornoMensagem.Erro)
    {
	<script type="text/javascript">
	    $(document).ready(function () {
            mostrarNotificacaoErro("Cadastro de Produto", "@Html.Raw(ViewBag.Mensagem)");
        });
	</script>
	}
    else if (ViewBag.Retorno == Enumerador.EnumRetornoMensagem.Sucesso)
    {
	<script type="text/javascript">
        $(document).ready(function () {
            mostrarNotificacaoSucesso("Cadastro de Produto", "@Html.Raw(ViewBag.Mensagem)");
	        produtoPesquisar();
	        ocultarCaixaDialogo('modalProdutoCadastro');
        });
	</script>        
	}
}

<form id="frmProduto" role="form">
    @Html.AntiForgeryToken()
    <div class="modal-dialog">
	    <div class="modal-content">
		    <div class="modal-header">
			    <button type="button" class="close" data-dismiss="modal">
				    &times;</button>
			    <h4 class="modal-title">Cadastro de Produto</h4>
		    </div>
		    <div class="modal-body">
                @Html.HiddenFor(x => x.ProdutoId)
                @if (Model.ProdutoId > 0)
                {
                <div class="row">
				    <div class="col-md-12 form-group">
                        @Html.CPTMLabelFor(x => x.ProdutoId)
                        @Html.CPTMTextBoxFor(x => x.ProdutoId, tipo: EnumTextBoxType.Numerico, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, htmlAttributes: new { TabIndex = 101, MaxLength = "20", disabled = "disabled" })
				    </div>
                </div>
                }
			    <div class="row">
				    <div class="col-md-12 form-group">
                        @Html.CPTMLabelFor(x => x.Nome)*
                        @Html.CPTMTextBoxFor(x => x.Nome, tipo: EnumTextBoxType.AlfaNumerico, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, preenchimentoObrigatorio: true , htmlAttributes: new { TabIndex = 101, MaxLength = "20" })
				    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 form-group">
                        @Html.CPTMLabelFor(x => x.CategoriaId)*
                        @Html.CPTMDropdownListFor(x => x.CategoriaId, ViewBag.ddlCategoria as List<SelectListItem>, preenchimentoObrigatorio: true, htmlAttributes: new { TabIndex = 102 })
                    </div>
			    </div>
                <div class="row">
				    <div class="col-md-4 form-group">
                        @Html.CPTMLabelFor(x => x.Valor)*
                        @Html.CPTMTextBoxFor(x => x.Valor, tipo: EnumTextBoxType.Moeda, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, preenchimentoObrigatorio: true, htmlAttributes: new { TabIndex = 103 })
                    </div>
				    <div class="col-md-4 form-group">
                        @Html.CPTMLabelFor(x => x.UnidadeMedidaId)*
                        @Html.CPTMDropdownListFor(x => x.UnidadeMedidaId, ViewBag.ddlUnidadeMedida as List<SelectListItem>, preenchimentoObrigatorio: true, htmlAttributes: new { TabIndex = 104 })
                    </div>
                    <div class="col-md-4 form-group">
                        @Html.CPTMLabelFor(x => x.Ativo)
                        <br />
                        @Html.CPTMCheckBoxFor(x => x.Ativo, customizado: true)
                    </div>
                </div>
		    </div>
		    <div class="modal-footer">
                <button type="submit" class="btn btn-success" accesskey = "S" tabindex="110"><i class="fa fa-check-circle"></i> Salvar</button>
			    <button type="button" class="btn btn-danger" data-dismiss="modal" accesskey = "C" tabindex="111"><i class="fa fa-times-circle"></i> Cancelar</button>
		    </div>
	    </div>
    </div>
</form>

<script type="text/javascript">

    $(document).ready(function () {

        // Foco inicial
        $('#modalProdutoCadastro #Nome').focus();

        // Formulário
        $('#frmProduto').on('submit', function (e) {

            // Valida formulário
            $(this).validate();

            // Verifica se o formulário foi validado
            if ($(this).valid()) {

                e.preventDefault();
                
                // Chama action
                $.ajax({
                    url: '@Url.Action("Salvar","Produto")',
                    type: 'POST',
                    data: $('#frmProduto').serialize(),
                    beforeSend: function () {
                        exibirCarregando();
                    },
                    success: function (data) {
                        $('#modalProdutoCadastro').html(data);
                    },
                    complete: function () {
                        ocultarCarregando();
                    }
                });
            }
        });

        carregarControles();
    });

</script>
