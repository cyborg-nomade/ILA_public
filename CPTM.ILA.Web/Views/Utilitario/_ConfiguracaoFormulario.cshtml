@model CPTM.ILA.Web.Models.Configuracao

@using CPTM.CasisLibrary.MVC;
@using CPTM.Comum;

@{
	if (ViewBag.Retorno == Enumerador.EnumRetornoMensagem.Erro)
    {
	<script type="text/javascript">
	    $(document).ready(function () {
            mostrarNotificacaoErro("Cadastro de Configuração", "@Html.Raw(ViewBag.Mensagem)");
        });
	</script>
	}
    else if (ViewBag.Retorno == Enumerador.EnumRetornoMensagem.Sucesso)
    {
	<script type="text/javascript">
        $(document).ready(function () {
            mostrarNotificacaoSucesso("Cadastro de Configuração", "@Html.Raw(ViewBag.Mensagem)");
	        configuracaoPesquisar();
	        ocultarCaixaDialogo('modalConfiguracaoCadastro');
        });
	</script>        
	}
}

<form id="frmConfiguracao" role="form">
    @Html.AntiForgeryToken()
    <div class="modal-dialog">
	    <div class="modal-content">
		    <div class="modal-header">
			    <button type="button" class="close" data-dismiss="modal">
				    &times;</button>
			    <h4 class="modal-title">Cadastro de Configuração</h4>
		    </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12 form-group">
                        @Html.CPTMLabelFor(x => x.Parametro)*
                        @Html.CPTMTextBoxFor(x => x.Parametro, tipo: EnumTextBoxType.Padrao, alteraFocusMaxCaracteres: true, alteraFocusTeclaEnter: true, preenchimentoObrigatorio: true, htmlAttributes: new { TabIndex = 101, MaxLength = "250" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 form-group">
                        @Html.CPTMLabelFor(x => x.Descricao)*
                        @Html.CPTMTextAreaFor(x => x.Descricao, tipoTexto: EnumTextTransform.Normal, alteraFocusMaxCaracteres: true, preenchimentoObrigatorio: true, htmlAttributes: new { TabIndex = 102, MaxLength = "4000" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 form-group">
                        @Html.CPTMLabelFor(x => x.Valor)*
                        @Html.CPTMTextAreaFor(x => x.Valor, tipoTexto: EnumTextTransform.Normal, alteraFocusMaxCaracteres: true, preenchimentoObrigatorio: true, htmlAttributes: new { TabIndex = 103, MaxLength = "4000" })
                    </div>
                </div>
            </div>
		    <div class="modal-footer">
                <button type="submit" class="btn btn-success" accesskey = "S" tabindex="110"><i class="fa fa-check-circle"></i> Salvar</button>
			    <button type="button" class="btn btn-danger" data-dismiss="modal" accesskey = "C" tabindex="111"><i class="fa fa-times-circle"></i> Cancelar</button>
		    </div>
	    </div>
    </div>
</form>

<script type="text/javascript">

    $(document).ready(function () {

        // Foco inicial
        $('#modalConfiguracaoCadastro #Nome').focus();

        // Formulário
        $('#frmConfiguracao').on('submit', function (e) {

            // Valida formulário
            $(this).validate();

            // Verifica se o formulário foi validado
            if ($(this).valid()) {

                e.preventDefault();
                
                // Chama action
                $.ajax({
                    url: '@Url.Action("ConfiguracaoSalvar","Utilitario")',
                    type: 'POST',
                    data: $('#frmConfiguracao').serialize(),
                    beforeSend: function () {
                        exibirCarregando();
                    },
                    success: function (data) {
                        $('#modalConfiguracaoCadastro').html(data);
                    },
                    complete: function () {
                        ocultarCarregando();
                    }
                });
            }
        });

        carregarControles();
    });

</script>
